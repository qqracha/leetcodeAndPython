# Контекстный менеджер — это объект, реализующий методы __enter__ и __exit__, который используется для работы с ресурсами, 
# гарантируя правильное открытие и закрытие ресурса, даже при возникновении исключения (ошибки) 

class MyContextManager:
    def __enter__(self):
        print("Вход в контекст")
        return self # Позволяет вернуть объект при необходимости
    
    def __exit__(self, exc_type, exc_value, traceback):
        print("Выход из контекста")
        # Если exc_type не None, значит произошла ошибка
        if exc_type:
            print(f"Произошло исключение: {exc_value}")
        return True # Если вернуть True, исключение не будет проброшено
    

# Пример использования контекстного менеджера:
with MyContextManager() as manager:
    print("Внутри контекста")
    raise ValueError("Что-то не так..") # raise - вызывает исключение